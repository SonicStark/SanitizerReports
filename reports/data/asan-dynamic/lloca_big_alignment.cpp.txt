

>>HEAD>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/alloca_big_alignment.cpp <<HEAD<<

=================================================================
==2729533==ERROR: AddressSanitizer: dynamic-stack-buffer-overflow on address 0x7ffc1eb2568a at pc 0x56186b3096ea bp 0x7ffc1eb255f0 sp 0x7ffc1eb255e8
WRITE of size 1 at 0x7ffc1eb2568a thread T0
    #0 0x56186b3096e9 in foo(int, int) /home/llvm/compiler-rt/test/asan/TestCases/alloca_big_alignment.cpp:10:14
    #1 0x56186b309751 in main /home/llvm/compiler-rt/test/asan/TestCases/alloca_big_alignment.cpp:16:3
    #2 0x7ff776a67082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x56186b30818d in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/alloca_big_alignment.cpp.tmp+0x118d)

Address 0x7ffc1eb2568a is located in stack of thread T0
SUMMARY: AddressSanitizer: dynamic-stack-buffer-overflow /home/llvm/compiler-rt/test/asan/TestCases/alloca_big_alignment.cpp:10:14 in foo(int, int)
Shadow bytes around the buggy address:
  0x7ffc1eb25400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffc1eb25480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffc1eb25500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffc1eb25580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffc1eb25600: 00 00 00 00 00 00 00 00 00 00 00 00 ca ca ca ca
=>0x7ffc1eb25680: 00[02]cb cb cb cb cb cb 00 00 00 00 00 00 00 00
  0x7ffc1eb25700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffc1eb25780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffc1eb25800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffc1eb25880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffc1eb25900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2729533==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/alloca_big_alignment.cpp <<TAIL<<
