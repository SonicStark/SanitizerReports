

>>HEAD>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/Linux/asan_preload_test-2.cpp <<HEAD<<

b'\xbe\x00=================================================================\n==2719946==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000011 at pc 0x7fb0a5a448e8 bp 0x7ffd471a1e60 sp 0x7ffd471a1620\nREAD of size 2 at 0x602000000011 thread T0\n    #0 0x7fb0a5a448e7 in __interceptor_write.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1191:16\n    #1 0x5617bf98b16e in do_access(void*) (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Linux/Output/asan_preload_test-2.cpp.tmp+0x116e)\n    #2 0x5617bf98b1ac in main (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Linux/Output/asan_preload_test-2.cpp.tmp+0x11ac)\n    #3 0x7fb0a548f082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16\n    #4 0x5617bf98b08d in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Linux/Output/asan_preload_test-2.cpp.tmp+0x108d)\n\n0x602000000011 is located 0 bytes after 1-byte region [0x602000000010,0x602000000011)\nallocated by thread T0 here:\n    #0 0x7fb0a5af4427 in malloc /home/llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3\n    #1 0x5617bf98b19f in main (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Linux/Output/asan_preload_test-2.cpp.tmp+0x119f)\n    #2 0x7fb0a548f082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1191:16 in __interceptor_write.part.0\nShadow bytes around the buggy address:\n  0x601ffffffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x601ffffffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x601ffffffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x601fffffff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x601fffffff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x602000000000: fa fa[01]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x602000000080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x602000000100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x602000000180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x602000000200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x602000000280: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==2719946==ABORTING\n'


>>TAIL>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/Linux/asan_preload_test-2.cpp <<TAIL<<
