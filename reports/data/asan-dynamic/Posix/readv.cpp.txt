

>>HEAD>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/Posix/readv.cpp <<HEAD<<

=================================================================
==2728199==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7f443c10001f at pc 0x7f443e6add2f bp 0x7ffe3c119850 sp 0x7ffe3c119010
WRITE of size 5 at 0x7f443c10001f thread T0
    #0 0x7f443e6add2e in write_iovec(void*, __sanitizer::__sanitizer_iovec*, unsigned long, unsigned long) /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1048:5
    #1 0x7f443e6ae0b5 in readv /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1142:27
    #2 0x56338eabe8c6 in main /home/llvm/compiler-rt/test/asan/TestCases/Posix/readv.cpp:28:3
    #3 0x7f443e110082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x56338eabd1dd in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Posix/Output/readv.cpp.tmp+0x11dd)

Address 0x7f443c10001f is located in stack of thread T0 at offset 31 in frame
    #0 0x56338eabe61f in main /home/llvm/compiler-rt/test/asan/TestCases/Posix/readv.cpp:14

  This frame has 3 object(s):
    [32, 2043) 'buf' (line 15) <== Memory access at offset 31 partially underflows this variable
    [2176, 2208) 'iov' (line 16)
    [2240, 2248) 'buf_' (line 18)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1048:5 in write_iovec(void*, __sanitizer::__sanitizer_iovec*, unsigned long, unsigned long)
Shadow bytes around the buggy address:
  0x7f443c0ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f443c0ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f443c0ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f443c0fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f443c0fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f443c100000: f1 f1 f1[f1]00 00 00 00 00 00 00 00 00 00 00 00
  0x7f443c100080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f443c100100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f443c100180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f443c100200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f443c100280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2728199==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/Posix/readv.cpp <<TAIL<<
