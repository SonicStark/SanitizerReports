

>>HEAD>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/debug_report.cpp <<HEAD<<

no report
=================================================================
report
pc: 0x560a9144b73a
bp: 0x7ffe3d64f8e0
sp: 0x7ffe3d64f8d8
addr: 0x602000000010
type: write
access_size: 1
description: heap-use-after-free
==2732591==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000010 at pc 0x560a9144b73a bp 0x7ffe3d64f8e0 sp 0x7ffe3d64f8d8
WRITE of size 1 at 0x602000000010 thread T0
    #0 0x560a9144b739 in main /home/llvm/compiler-rt/test/asan/TestCases/debug_report.cpp:21:15
    #1 0x7f6ee9235082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #2 0x560a9144a20d in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/debug_report.cpp.tmp+0x220d)

0x602000000010 is located 0 bytes inside of 10-byte region [0x602000000010,0x60200000001a)
freed by thread T0 here:
    #0 0x7f6ee98996c7 in __interceptor_cfree.part.0 /home/llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp:52:3
    #1 0x560a9144b6a4 in main /home/llvm/compiler-rt/test/asan/TestCases/debug_report.cpp:17:3
    #2 0x7f6ee9235082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16

previously allocated by thread T0 here:
    #0 0x7f6ee989a427 in malloc /home/llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x560a9144b697 in main /home/llvm/compiler-rt/test/asan/TestCases/debug_report.cpp:16:28
    #2 0x7f6ee9235082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16

SUMMARY: AddressSanitizer: heap-use-after-free /home/llvm/compiler-rt/test/asan/TestCases/debug_report.cpp:21:15 in main
Shadow bytes around the buggy address:
  0x601ffffffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x601ffffffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x601ffffffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x601fffffff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x601fffffff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x602000000000: fa fa[fd]fd fa fa fa fa fa fa fa fa fa fa fa fa
  0x602000000080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x602000000100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x602000000180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x602000000200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x602000000280: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2732591==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/debug_report.cpp <<TAIL<<
