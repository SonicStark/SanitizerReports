

>>HEAD>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/strncasecmp_strict.c <<HEAD<<

=================================================================
==2739240==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7f1c4ec0001f at pc 0x7f1c5159f55c bp 0x7ffc967977d0 sp 0x7ffc96796f90
READ of size 1 at 0x7f1c4ec0001f thread T0
    #0 0x7f1c5159f55b in __interceptor_strncasecmp.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:608:3
    #1 0x563fc6c10a81 in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:45:14
    #2 0x7f1c512b3082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x563fc6c0f1ad in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/strncasecmp_strict.c.tmp+0x11ad)

Address 0x7f1c4ec0001f is located in stack of thread T0 at offset 31 in frame
    #0 0x563fc6c105ef in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:25

  This frame has 2 object(s):
    [32, 132) 's1' (line 29) <== Memory access at offset 31 underflows this variable
    [176, 276) 's2' (line 30)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:608:3 in __interceptor_strncasecmp.part.0
Shadow bytes around the buggy address:
  0x7f1c4ebffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f1c4ebffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f1c4ebffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f1c4ebfff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f1c4ebfff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f1c4ec00000: f1 f1 f1[f1]00 00 00 00 00 00 00 00 00 00 00 00
  0x7f1c4ec00080: 04 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
  0x7f1c4ec00100: 00 00 04 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x7f1c4ec00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f1c4ec00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f1c4ec00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2739240==ABORTING
=================================================================
==2739495==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f3d84e000af at pc 0x7f3d8778f651 bp 0x7ffeb870c3b0 sp 0x7ffeb870bb70
READ of size 1 at 0x7f3d84e000af thread T0
    #0 0x7f3d8778f650 in __interceptor_strncasecmp.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:609:3
    #1 0x556428eadab2 in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:47:14
    #2 0x7f3d874a3082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x556428eac1ad in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/strncasecmp_strict.c.tmp+0x11ad)

Address 0x7f3d84e000af is located in stack of thread T0 at offset 175 in frame
    #0 0x556428ead5ef in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:25

  This frame has 2 object(s):
    [32, 132) 's1' (line 29)
    [176, 276) 's2' (line 30) <== Memory access at offset 175 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:609:3 in __interceptor_strncasecmp.part.0
Shadow bytes around the buggy address:
  0x7f3d84dffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f3d84dffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f3d84dfff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f3d84dfff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f3d84e00000: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f3d84e00080: 04 f2 f2 f2 f2[f2]00 00 00 00 00 00 00 00 00 00
  0x7f3d84e00100: 00 00 04 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x7f3d84e00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f3d84e00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f3d84e00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f3d84e00300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2739495==ABORTING
=================================================================
==2739641==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f8724300084 at pc 0x7f8726c2455c bp 0x7ffe765256f0 sp 0x7ffe76524eb0
READ of size 1 at 0x7f8724300084 thread T0
    #0 0x7f8726c2455b in __interceptor_strncasecmp.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:608:3
    #1 0x561ebd54dae3 in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:49:14
    #2 0x7f8726938082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x561ebd54c1ad in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/strncasecmp_strict.c.tmp+0x11ad)

Address 0x7f8724300084 is located in stack of thread T0 at offset 132 in frame
    #0 0x561ebd54d5ef in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:25

  This frame has 2 object(s):
    [32, 132) 's1' (line 29) <== Memory access at offset 132 overflows this variable
    [176, 276) 's2' (line 30)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:608:3 in __interceptor_strncasecmp.part.0
Shadow bytes around the buggy address:
  0x7f87242ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87242ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87242fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f87242fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8724300000: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f8724300080:[04]f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
  0x7f8724300100: 00 00 04 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x7f8724300180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8724300200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8724300280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8724300300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2739641==ABORTING
=================================================================
==2739867==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f60df500114 at pc 0x7f60e1ed7651 bp 0x7ffeb7eba950 sp 0x7ffeb7eba110
READ of size 1 at 0x7f60df500114 thread T0
    #0 0x7f60e1ed7650 in __interceptor_strncasecmp.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:609:3
    #1 0x565430f8db14 in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:51:14
    #2 0x7f60e1beb082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x565430f8c1ad in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/strncasecmp_strict.c.tmp+0x11ad)

Address 0x7f60df500114 is located in stack of thread T0 at offset 276 in frame
    #0 0x565430f8d5ef in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:25

  This frame has 2 object(s):
    [32, 132) 's1' (line 29)
    [176, 276) 's2' (line 30) <== Memory access at offset 276 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:609:3 in __interceptor_strncasecmp.part.0
Shadow bytes around the buggy address:
  0x7f60df4ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f60df4fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f60df4fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f60df500000: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f60df500080: 04 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
=>0x7f60df500100: 00 00[04]f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x7f60df500180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f60df500200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f60df500280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f60df500300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f60df500380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2739867==ABORTING
=================================================================
==2740138==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f6861200084 at pc 0x7f6863bff55c bp 0x7fffc17ddbf0 sp 0x7fffc17dd3b0
READ of size 100 at 0x7f6861200084 thread T0
    #0 0x7f6863bff55b in __interceptor_strncasecmp.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:608:3
    #1 0x55b4bb70ab45 in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:53:14
    #2 0x7f6863913082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x55b4bb7091ad in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/strncasecmp_strict.c.tmp+0x11ad)

Address 0x7f6861200084 is located in stack of thread T0 at offset 132 in frame
    #0 0x55b4bb70a5ef in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:25

  This frame has 2 object(s):
    [32, 132) 's1' (line 29)
    [176, 276) 's2' (line 30) <== Memory access at offset 132 partially underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:608:3 in __interceptor_strncasecmp.part.0
Shadow bytes around the buggy address:
  0x7f68611ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68611ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68611fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68611fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f6861200000: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f6861200080:[04]f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
  0x7f6861200100: 00 00 04 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x7f6861200180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f6861200200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f6861200280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f6861200300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2740138==ABORTING
=================================================================
==2740486==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f2f33a00114 at pc 0x7f2f363e8651 bp 0x7ffe0f969170 sp 0x7ffe0f968930
READ of size 100 at 0x7f2f33a00114 thread T0
    #0 0x7f2f363e8650 in __interceptor_strncasecmp.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:609:3
    #1 0x564e340a9b76 in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:55:14
    #2 0x7f2f360fc082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x564e340a81ad in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/strncasecmp_strict.c.tmp+0x11ad)

Address 0x7f2f33a00114 is located in stack of thread T0 at offset 276 in frame
    #0 0x564e340a95ef in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:25

  This frame has 2 object(s):
    [32, 132) 's1' (line 29)
    [176, 276) 's2' (line 30) <== Memory access at offset 276 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:609:3 in __interceptor_strncasecmp.part.0
Shadow bytes around the buggy address:
  0x7f2f339ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2f339fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2f339fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2f33a00000: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2f33a00080: 04 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
=>0x7f2f33a00100: 00 00[04]f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x7f2f33a00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2f33a00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2f33a00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2f33a00300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2f33a00380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2740486==ABORTING
=================================================================
==2740798==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f68e4f00114 at pc 0x7f68e78df651 bp 0x7fff12e611f0 sp 0x7fff12e609b0
READ of size 101 at 0x7f68e4f00114 thread T0
    #0 0x7f68e78df650 in __interceptor_strncasecmp.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:609:3
    #1 0x5587c0d7cbea in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:58:7
    #2 0x7f68e75f3082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x5587c0d7b1ad in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/strncasecmp_strict.c.tmp+0x11ad)

Address 0x7f68e4f00114 is located in stack of thread T0 at offset 276 in frame
    #0 0x5587c0d7c5ef in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:25

  This frame has 2 object(s):
    [32, 132) 's1' (line 29)
    [176, 276) 's2' (line 30) <== Memory access at offset 276 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:609:3 in __interceptor_strncasecmp.part.0
Shadow bytes around the buggy address:
  0x7f68e4effe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68e4efff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68e4efff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68e4f00000: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68e4f00080: 04 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
=>0x7f68e4f00100: 00 00[04]f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x7f68e4f00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68e4f00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68e4f00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68e4f00300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f68e4f00380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2740798==ABORTING
=================================================================
==2741165==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f7b1bf00084 at pc 0x7f7b1e85155c bp 0x7ffd2818dc30 sp 0x7ffd2818d3f0
READ of size 101 at 0x7f7b1bf00084 thread T0
    #0 0x7f7b1e85155b in __interceptor_strncasecmp.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:608:3
    #1 0x55c062f11c80 in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:62:7
    #2 0x7f7b1e565082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x55c062f101ad in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/strncasecmp_strict.c.tmp+0x11ad)

Address 0x7f7b1bf00084 is located in stack of thread T0 at offset 132 in frame
    #0 0x55c062f115ef in main /home/llvm/compiler-rt/test/asan/TestCases/strncasecmp_strict.c:25

  This frame has 2 object(s):
    [32, 132) 's1' (line 29)
    [176, 276) 's2' (line 30) <== Memory access at offset 132 partially underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:608:3 in __interceptor_strncasecmp.part.0
Shadow bytes around the buggy address:
  0x7f7b1beffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7b1beffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7b1befff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7b1befff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7b1bf00000: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f7b1bf00080:[04]f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
  0x7f7b1bf00100: 00 00 04 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x7f7b1bf00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7b1bf00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7b1bf00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7b1bf00300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2741165==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/strncasecmp_strict.c <<TAIL<<
