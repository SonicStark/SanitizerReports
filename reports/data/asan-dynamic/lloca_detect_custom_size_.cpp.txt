

>>HEAD>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/alloca_detect_custom_size_.cpp <<HEAD<<

=================================================================
==2729618==ERROR: AddressSanitizer: dynamic-stack-buffer-overflow on address 0x7fff6714c000 at pc 0x55f6425746d2 bp 0x7fff6714bf30 sp 0x7fff6714bf28
WRITE of size 1 at 0x7fff6714c000 thread T0
    #0 0x55f6425746d1 in foo(int, int) /home/llvm/compiler-rt/test/asan/TestCases/alloca_detect_custom_size_.cpp:15:19
    #1 0x55f642574731 in main /home/llvm/compiler-rt/test/asan/TestCases/alloca_detect_custom_size_.cpp:21:3
    #2 0x7fd1dee84082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x55f64257318d in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/alloca_detect_custom_size_.cpp.tmp+0x118d)

Address 0x7fff6714c000 is located in stack of thread T0
SUMMARY: AddressSanitizer: dynamic-stack-buffer-overflow /home/llvm/compiler-rt/test/asan/TestCases/alloca_detect_custom_size_.cpp:15:19 in foo(int, int)
Shadow bytes around the buggy address:
  0x7fff6714bd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fff6714be00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fff6714be80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fff6714bf00: 00 00 00 00 00 00 00 00 ca ca ca ca 00 00 00 00
  0x7fff6714bf80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7fff6714c000:[cb]cb cb cb 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fff6714c080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fff6714c100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fff6714c180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fff6714c200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fff6714c280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2729618==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/alloca_detect_custom_size_.cpp <<TAIL<<
