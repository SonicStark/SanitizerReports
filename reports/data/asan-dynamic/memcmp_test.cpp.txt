

>>HEAD>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/memcmp_test.cpp <<HEAD<<

=================================================================
==2736373==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f10e4500024 at pc 0x7f10e7175da8 bp 0x7ffd5a7ce030 sp 0x7ffd5a7cd7f0
READ of size 5 at 0x7f10e4500024 thread T0
    #0 0x7f10e7175da7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7
    #1 0x7f10e71767f8 in __interceptor_memcmp /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:940:33
    #2 0x55e3cfa458da in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_test.cpp:12:13
    #3 0x7f10e6b3c082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x55e3cfa4414d in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/memcmp_test.cpp.tmp+0x114d)

Address 0x7f10e4500024 is located in stack of thread T0 at offset 36 in frame
    #0 0x55e3cfa4558f in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_test.cpp:9

  This frame has 2 object(s):
    [32, 36) 'a1' (line 10) <== Memory access at offset 36 overflows this variable
    [48, 52) 'a2' (line 11)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long)
Shadow bytes around the buggy address:
  0x7f10e44ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f10e44ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f10e44ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f10e44fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f10e44fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f10e4500000: f1 f1 f1 f1[04]f2 04 f3 00 00 00 00 00 00 00 00
  0x7f10e4500080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f10e4500100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f10e4500180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f10e4500200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f10e4500280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2736373==ABORTING
=================================================================
==2737300==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f54d7300024 at pc 0x7f54d9facda8 bp 0x7fff5aed7f30 sp 0x7fff5aed76f0
READ of size 5 at 0x7f54d7300024 thread T0
    #0 0x7f54d9facda7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7
    #1 0x7f54d9fad7f8 in __interceptor_memcmp /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:940:33
    #2 0x55798dc9071a in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_test.cpp:12:13
    #3 0x7f54d9973082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x55798dc8f14d in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/memcmp_test.cpp.tmp+0x114d)

Address 0x7f54d7300024 is located in stack of thread T0 at offset 36 in frame
    #0 0x55798dc9058f in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_test.cpp:9

  This frame has 2 object(s):
    [32, 36) 'a1' (line 10) <== Memory access at offset 36 overflows this variable
    [48, 52) 'a2' (line 11)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long)
Shadow bytes around the buggy address:
  0x7f54d72ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f54d72ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f54d72ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f54d72fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f54d72fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f54d7300000: f1 f1 f1 f1[04]f2 04 f3 00 00 00 00 00 00 00 00
  0x7f54d7300080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f54d7300100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f54d7300180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f54d7300200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f54d7300280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2737300==ABORTING
=================================================================
==2738298==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f0c4d400024 at pc 0x7f0c50112da8 bp 0x7ffd07d49cd0 sp 0x7ffd07d49490
READ of size 5 at 0x7f0c4d400024 thread T0
    #0 0x7f0c50112da7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7
    #1 0x7f0c501137f8 in __interceptor_memcmp /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:940:33
    #2 0x561b41b2d71a in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_test.cpp:12:13
    #3 0x7f0c4fad9082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x561b41b2c14d in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/memcmp_test.cpp.tmp+0x114d)

Address 0x7f0c4d400024 is located in stack of thread T0 at offset 36 in frame
    #0 0x561b41b2d58f in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_test.cpp:9

  This frame has 2 object(s):
    [32, 36) 'a1' (line 10) <== Memory access at offset 36 overflows this variable
    [48, 52) 'a2' (line 11)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long)
Shadow bytes around the buggy address:
  0x7f0c4d3ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0c4d3ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0c4d3ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0c4d3fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0c4d3fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f0c4d400000: f1 f1 f1 f1[04]f2 04 f3 00 00 00 00 00 00 00 00
  0x7f0c4d400080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0c4d400100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0c4d400180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0c4d400200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0c4d400280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2738298==ABORTING
=================================================================
==2738893==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fadc6f00024 at pc 0x7fadc9bcdda8 bp 0x7ffef6a4a8f0 sp 0x7ffef6a4a0b0
READ of size 5 at 0x7fadc6f00024 thread T0
    #0 0x7fadc9bcdda7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7
    #1 0x7fadc9bce7f8 in __interceptor_memcmp /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:940:33
    #2 0x55f104fdc719 in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_test.cpp:12:13
    #3 0x7fadc9594082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x55f104fdb14d in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/memcmp_test.cpp.tmp+0x114d)

Address 0x7fadc6f00024 is located in stack of thread T0 at offset 36 in frame
    #0 0x55f104fdc58f in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_test.cpp:9

  This frame has 2 object(s):
    [32, 36) 'a1' (line 10) <== Memory access at offset 36 overflows this variable
    [48, 52) 'a2' (line 11)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long)
Shadow bytes around the buggy address:
  0x7fadc6effd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fadc6effe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fadc6effe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fadc6efff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fadc6efff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7fadc6f00000: f1 f1 f1 f1[04]f2 04 f3 00 00 00 00 00 00 00 00
  0x7fadc6f00080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fadc6f00100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fadc6f00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fadc6f00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fadc6f00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2738893==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/memcmp_test.cpp <<TAIL<<
