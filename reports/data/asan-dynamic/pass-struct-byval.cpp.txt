

>>HEAD>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/pass-struct-byval.cpp <<HEAD<<

=================================================================
==2737363==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fa5eb10009c at pc 0x55c9d67976d4 bp 0x7ffebc89f9b0 sp 0x7ffebc89f9a8
READ of size 4 at 0x7fa5eb10009c thread T0
    #0 0x55c9d67976d3 in bar(A*) /home/llvm/compiler-rt/test/asan/TestCases/pass-struct-byval.cpp:10:10
    #1 0x55c9d6797824 in foo(A) /home/llvm/compiler-rt/test/asan/TestCases/pass-struct-byval.cpp:14:3
    #2 0x55c9d6797a02 in main /home/llvm/compiler-rt/test/asan/TestCases/pass-struct-byval.cpp:18:3
    #3 0x7fa5ed6d0082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x55c9d679616d in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxDynamicConfig/TestCases/Output/pass-struct-byval.cpp.tmp+0x116d)

Address 0x7fa5eb10009c is located in stack of thread T0 at offset 28 in frame
    #0 0x55c9d679774f in foo(A) /home/llvm/compiler-rt/test/asan/TestCases/pass-struct-byval.cpp:13

  This frame has 1 object(s):
    [32, 64) 'a.byval' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow /home/llvm/compiler-rt/test/asan/TestCases/pass-struct-byval.cpp:10:10 in bar(A*)
Shadow bytes around the buggy address:
  0x7fa5eb0ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fa5eb0ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fa5eb0fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fa5eb0fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fa5eb100000: f1 f1 f1 f1 00 00 00 00 f3 f3 f3 f3 00 00 00 00
=>0x7fa5eb100080: f1 f1 f1[f1]00 00 00 00 f3 f3 f3 f3 00 00 00 00
  0x7fa5eb100100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fa5eb100180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fa5eb100200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fa5eb100280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fa5eb100300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2737363==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux-dynamic :: TestCases/pass-struct-byval.cpp <<TAIL<<
