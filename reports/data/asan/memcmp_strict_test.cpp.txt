

>>HEAD>> AddressSanitizer-x86_64-linux :: TestCases/memcmp_strict_test.cpp <<HEAD<<

res: -1
=================================================================
==2811789==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f373a100024 at pc 0x5591be5e4878 bp 0x7ffe3a6fccb0 sp 0x7ffe3a6fc470
READ of size 5 at 0x7f373a100024 thread T0
    #0 0x5591be5e4877 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7
    #1 0x5591be5e52c8 in __interceptor_memcmp /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:940:33
    #2 0x5591be65a6a5 in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_strict_test.cpp:11:13
    #3 0x7f373c7e1082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x5591be52b2dd in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Output/memcmp_strict_test.cpp.tmp+0x1e2dd)

Address 0x7f373a100024 is located in stack of thread T0 at offset 36 in frame
    #0 0x5591be65a58f in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_strict_test.cpp:8

  This frame has 2 object(s):
    [32, 36) 'kFoo' (line 9) <== Memory access at offset 36 overflows this variable
    [48, 54) 'kFubar' (line 10)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long)
Shadow bytes around the buggy address:
  0x7f373a0ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f373a0ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f373a0ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f373a0fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f373a0fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f373a100000: f1 f1 f1 f1[04]f2 06 f3 f3 f3 f3 f3 00 00 00 00
  0x7f373a100080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f373a100100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f373a100180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f373a100200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f373a100280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2811789==ABORTING
=================================================================
==2812167==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f0512d00024 at pc 0x55decdbb4878 bp 0x7ffdbd9bba50 sp 0x7ffdbd9bb210
READ of size 5 at 0x7f0512d00024 thread T0
    #0 0x55decdbb4877 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7
    #1 0x55decdbb52c8 in __interceptor_memcmp /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:940:33
    #2 0x55decdc2a6a5 in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_strict_test.cpp:11:13
    #3 0x7f05153f9082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x55decdafb2dd in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Output/memcmp_strict_test.cpp.tmp+0x1e2dd)

Address 0x7f0512d00024 is located in stack of thread T0 at offset 36 in frame
    #0 0x55decdc2a58f in main /home/llvm/compiler-rt/test/asan/TestCases/memcmp_strict_test.cpp:8

  This frame has 2 object(s):
    [32, 36) 'kFoo' (line 9) <== Memory access at offset 36 overflows this variable
    [48, 54) 'kFubar' (line 10)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:908:7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long)
Shadow bytes around the buggy address:
  0x7f0512cffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0512cffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0512cffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0512cfff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0512cfff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f0512d00000: f1 f1 f1 f1[04]f2 06 f3 f3 f3 f3 f3 00 00 00 00
  0x7f0512d00080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0512d00100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0512d00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0512d00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f0512d00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2812167==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux :: TestCases/memcmp_strict_test.cpp <<TAIL<<
