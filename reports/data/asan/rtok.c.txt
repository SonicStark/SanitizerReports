

>>HEAD>> AddressSanitizer-x86_64-linux :: TestCases/strtok.c <<HEAD<<

=================================================================
==2813402==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f2163500031 at pc 0x5641cf4bb696 bp 0x7ffda3b014f0 sp 0x7ffda3b00cb0
READ of size 2 at 0x7f2163500031 thread T0
    #0 0x5641cf4bb695 in __interceptor_strtok.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:693:5
    #1 0x5641cf5368ca in test1 /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:37:11
    #2 0x5641cf5371b2 in main /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:96:34
    #3 0x7f2165ae1082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x5641cf40a2ed in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Output/strtok.c.tmp+0x1e2ed)

Address 0x7f2163500031 is located in stack of thread T0 at offset 49 in frame
    #0 0x5641cf5367bf in test1 /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:32

  This frame has 2 object(s):
    [32, 36) 's' (line 34)
    [48, 50) 'token_delimiter' (line 35) <== Memory access at offset 49 partially overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:693:5 in __interceptor_strtok.part.0
Shadow bytes around the buggy address:
  0x7f21634ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f21634ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f21634ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f21634fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f21634fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f2163500000: f1 f1 f1 f1 04 f2[01]f3 00 00 00 00 00 00 00 00
  0x7f2163500080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2163500100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2163500180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2163500200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f2163500280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2813402==ABORTING
=================================================================
==2813562==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fe740d00031 at pc 0x55ef0e3b2696 bp 0x7fff6bed40b0 sp 0x7fff6bed3870
READ of size 2 at 0x7fe740d00031 thread T0
    #0 0x55ef0e3b2695 in __interceptor_strtok.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:693:5
    #1 0x55ef0e42da9d in test2 /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:50:11
    #2 0x55ef0e42e1f9 in main /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:97:34
    #3 0x7fe7432c0082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x55ef0e3012ed in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Output/strtok.c.tmp+0x1e2ed)

Address 0x7fe740d00031 is located in stack of thread T0 at offset 49 in frame
    #0 0x55ef0e42d93f in test2 /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:43

  This frame has 2 object(s):
    [32, 36) 's' (line 45)
    [48, 50) 'token_delimiter' (line 46) <== Memory access at offset 49 partially overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:693:5 in __interceptor_strtok.part.0
Shadow bytes around the buggy address:
  0x7fe740cffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fe740cffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fe740cffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fe740cfff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fe740cfff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7fe740d00000: f1 f1 f1 f1 04 f2[01]f3 00 00 00 00 00 00 00 00
  0x7fe740d00080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fe740d00100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fe740d00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fe740d00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fe740d00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2813562==ABORTING
=================================================================
==2813752==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fc22be00023 at pc 0x559e75509896 bp 0x7ffd6e9c9650 sp 0x7ffd6e9c8e10
READ of size 4 at 0x7fc22be00023 thread T0
    #0 0x559e75509895 in __interceptor_strtok.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:691:7
    #1 0x559e75584c1a in test3 /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:60:11
    #2 0x559e75585240 in main /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:98:34
    #3 0x7fc22e409082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x559e754582ed in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Output/strtok.c.tmp+0x1e2ed)

Address 0x7fc22be00023 is located in stack of thread T0 at offset 35 in frame
    #0 0x559e75584b0f in test3 /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:55

  This frame has 2 object(s):
    [32, 36) 's' (line 57) <== Memory access at offset 35 partially overflows this variable
    [48, 50) 'token_delimiter' (line 58)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:691:7 in __interceptor_strtok.part.0
Shadow bytes around the buggy address:
  0x7fc22bdffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fc22bdffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fc22bdffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fc22bdfff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fc22bdfff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7fc22be00000: f1 f1 f1 f1[03]f2 02 f3 00 00 00 00 00 00 00 00
  0x7fc22be00080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fc22be00100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fc22be00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fc22be00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fc22be00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2813752==ABORTING
=================================================================
==2814006==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f803e700022 at pc 0x558b937c3242 bp 0x7fffcb3c18b0 sp 0x7fffcb3c1070
READ of size 4 at 0x7f803e700022 thread T0
    #0 0x558b937c3241 in __interceptor_strtok.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:708:7
    #1 0x558b9383ef4c in test5 /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:80:11
    #2 0x558b9383f2ce in main /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:100:34
    #3 0x7f8040cfa082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x558b937122ed in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Output/strtok.c.tmp+0x1e2ed)

Address 0x7f803e700022 is located in stack of thread T0 at offset 34 in frame
    #0 0x558b9383ee2f in test5 /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:74

  This frame has 2 object(s):
    [32, 36) 's' (line 76) <== Memory access at offset 34 partially overflows this variable
    [48, 50) 'token_delimiter' (line 77)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:708:7 in __interceptor_strtok.part.0
Shadow bytes around the buggy address:
  0x7f803e6ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f803e6ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f803e6ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f803e6fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f803e6fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f803e700000: f1 f1 f1 f1[02]f2 01 f3 00 00 00 00 00 00 00 00
  0x7f803e700080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f803e700100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f803e700180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f803e700200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f803e700280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2814006==ABORTING
=================================================================
==2814180==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f20d5600031 at pc 0x5605dd725993 bp 0x7ffc5d0b3e50 sp 0x7ffc5d0b3610
READ of size 1 at 0x7f20d5600031 thread T0
    #0 0x5605dd725992 in __interceptor_strtok.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:705:5
    #1 0x5605dd7a10ce in test6 /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:90:11
    #2 0x5605dd7a1315 in main /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:101:34
    #3 0x7f20d7c15082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x5605dd6742ed in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Output/strtok.c.tmp+0x1e2ed)

Address 0x7f20d5600031 is located in stack of thread T0 at offset 49 in frame
    #0 0x5605dd7a0fbf in test6 /home/llvm/compiler-rt/test/asan/TestCases/strtok.c:85

  This frame has 2 object(s):
    [32, 36) 's' (line 87)
    [48, 49) 'token_delimiter' (line 88) <== Memory access at offset 49 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:705:5 in __interceptor_strtok.part.0
Shadow bytes around the buggy address:
  0x7f20d55ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f20d55ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f20d55ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f20d55fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f20d55fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f20d5600000: f1 f1 f1 f1 04 f2[01]f3 00 00 00 00 00 00 00 00
  0x7f20d5600080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f20d5600100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f20d5600180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f20d5600200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f20d5600280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2814180==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux :: TestCases/strtok.c <<TAIL<<
