

>>HEAD>> AddressSanitizer-x86_64-linux :: TestCases/Posix/fread_fwrite.cpp <<HEAD<<

=================================================================
==2797541==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f8eab700022 at pc 0x556b8ecdc626 bp 0x7ffef8051590 sp 0x7ffef8050d50
READ of size 4 at 0x7f8eab700022 thread T0
    #0 0x556b8ecdc625 in __interceptor_fwrite.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1205:16
    #1 0x556b8edce7d2 in test_fwrite() /home/llvm/compiler-rt/test/asan/TestCases/Posix/fread_fwrite.cpp:19:3
    #2 0x556b8edce86e in main /home/llvm/compiler-rt/test/asan/TestCases/Posix/fread_fwrite.cpp:27:5
    #3 0x7f8eadeb8082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x556b8ec9f2dd in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Posix/Output/fread_fwrite.cpp.tmp+0x1e2dd)

Address 0x7f8eab700022 is located in stack of thread T0 at offset 34 in frame
    #0 0x556b8edce6ef in test_fwrite() /home/llvm/compiler-rt/test/asan/TestCases/Posix/fread_fwrite.cpp:16

  This frame has 1 object(s):
    [32, 34) 'buf' (line 18) <== Memory access at offset 34 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1205:16 in __interceptor_fwrite.part.0
Shadow bytes around the buggy address:
  0x7f8eab6ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8eab6ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8eab6ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8eab6fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8eab6fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f8eab700000: f1 f1 f1 f1[02]f3 f3 f3 00 00 00 00 00 00 00 00
  0x7f8eab700080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8eab700100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8eab700180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8eab700200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f8eab700280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2797541==ABORTING
=================================================================
==2797878==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f5ce5600022 at pc 0x561fba0b51b6 bp 0x7ffee1cca450 sp 0x7ffee1cc9c10
WRITE of size 4 at 0x7f5ce5600022 thread T0
    #0 0x561fba0b51b5 in __interceptor_fread.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1091:16
    #1 0x561fba1a6673 in test_fread() /home/llvm/compiler-rt/test/asan/TestCases/Posix/fread_fwrite.cpp:11:3
    #2 0x561fba1a6864 in main /home/llvm/compiler-rt/test/asan/TestCases/Posix/fread_fwrite.cpp:25:5
    #3 0x7f5ce7de1082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #4 0x561fba0772dd in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Posix/Output/fread_fwrite.cpp.tmp+0x1e2dd)

Address 0x7f5ce5600022 is located in stack of thread T0 at offset 34 in frame
    #0 0x561fba1a658f in test_fread() /home/llvm/compiler-rt/test/asan/TestCases/Posix/fread_fwrite.cpp:8

  This frame has 1 object(s):
    [32, 34) 'buf' (line 10) <== Memory access at offset 34 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1091:16 in __interceptor_fread.part.0
Shadow bytes around the buggy address:
  0x7f5ce55ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f5ce55ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f5ce55ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f5ce55fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f5ce55fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f5ce5600000: f1 f1 f1 f1[02]f3 f3 f3 00 00 00 00 00 00 00 00
  0x7f5ce5600080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f5ce5600100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f5ce5600180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f5ce5600200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f5ce5600280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2797878==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux :: TestCases/Posix/fread_fwrite.cpp <<TAIL<<
