

>>HEAD>> AddressSanitizer-x86_64-linux :: TestCases/Posix/concurrent_overflow.cpp <<HEAD<<

=================================================================
==2794961==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f4511cb9029 at pc 0x55eee42b09e0 bp 0x7f45181f0d90 sp 0x7f45181f0d88
READ of size 1 at 0x7f4511cb9029 thread T6
    #0 0x55eee42b09df in start_routine(void*) /home/llvm/compiler-rt/test/asan/TestCases/Posix/concurrent_overflow.cpp:16:12
    #1 0x7f451ea47608 in start_thread /build/glibc-SzIz7B/glibc-2.31/nptl/pthread_create.c:477:8
    #2 0x7f451e923132 in __clone /build/glibc-SzIz7B/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95

Address 0x7f4511cb9029 is located in stack of thread T6 at offset 41 in frame
    #0 0x55eee42b081f in start_routine(void*) /home/llvm/compiler-rt/test/asan/TestCases/Posix/concurrent_overflow.cpp:10

  This frame has 1 object(s):
    [32, 40) 'buf' (line 12) <== Memory access at offset 41 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
Thread T6 created by T0 here:
    #0 0x55eee419d026 in __interceptor_pthread_create /home/llvm/compiler-rt/lib/asan/asan_interceptors.cpp:208:3
    #1 0x55eee42b06f7 in main /home/llvm/compiler-rt/test/asan/TestCases/Posix/concurrent_overflow.cpp:26:5
    #2 0x7f451e828082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16

SUMMARY: AddressSanitizer: stack-buffer-overflow /home/llvm/compiler-rt/test/asan/TestCases/Posix/concurrent_overflow.cpp:16:12 in start_routine(void*)
Shadow bytes around the buggy address:
  0x7f4511cb8d80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f4511cb8e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f4511cb8e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f4511cb8f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f4511cb8f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f4511cb9000: f1 f1 f1 f1 00[f3]f3 f3 00 00 00 00 00 00 00 00
  0x7f4511cb9080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f4511cb9100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f4511cb9180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f4511cb9200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f4511cb9280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2794961==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux :: TestCases/Posix/concurrent_overflow.cpp <<TAIL<<
