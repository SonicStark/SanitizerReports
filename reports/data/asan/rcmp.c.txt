

>>HEAD>> AddressSanitizer-x86_64-linux :: TestCases/strcmp.c <<HEAD<<

=================================================================
==2812553==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7f7c0040001f at pc 0x562cec613549 bp 0x7ffcd351e7d0 sp 0x7ffcd351df90
READ of size 1 at 0x7f7c0040001f thread T0
    #0 0x562cec613548 in __interceptor_strcmp.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:514:5
    #1 0x562cec689913 in main /home/llvm/compiler-rt/test/asan/TestCases/strcmp.c:14:3
    #2 0x7f7c028e5082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x562cec55d2ed in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Output/strcmp.c.tmp+0x1d2ed)

Address 0x7f7c0040001f is located in stack of thread T0 at offset 31 in frame
    #0 0x562cec6897bf in main /home/llvm/compiler-rt/test/asan/TestCases/strcmp.c:10

  This frame has 2 object(s):
    [32, 37) 's1' (line 11) <== Memory access at offset 31 underflows this variable
    [64, 69) 's2' (line 12)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:514:5 in __interceptor_strcmp.part.0
Shadow bytes around the buggy address:
  0x7f7c003ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7c003ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7c003ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7c003fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7c003fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f7c00400000: f1 f1 f1[f1]05 f2 f2 f2 05 f3 f3 f3 00 00 00 00
  0x7f7c00400080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7c00400100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7c00400180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7c00400200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f7c00400280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2812553==ABORTING
=================================================================
==2812642==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7f37e3d0001f at pc 0x55f3cb8ed549 bp 0x7fffa454e450 sp 0x7fffa454dc10
READ of size 1 at 0x7f37e3d0001f thread T0
    #0 0x55f3cb8ed548 in __interceptor_strcmp.part.0 /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:514:5
    #1 0x55f3cb963913 in main /home/llvm/compiler-rt/test/asan/TestCases/strcmp.c:14:3
    #2 0x7f37e61ea082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x55f3cb8372ed in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Output/strcmp.c.tmp+0x1d2ed)

Address 0x7f37e3d0001f is located in stack of thread T0 at offset 31 in frame
    #0 0x55f3cb9637bf in main /home/llvm/compiler-rt/test/asan/TestCases/strcmp.c:10

  This frame has 2 object(s):
    [32, 37) 's1' (line 11) <== Memory access at offset 31 underflows this variable
    [64, 69) 's2' (line 12)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:514:5 in __interceptor_strcmp.part.0
Shadow bytes around the buggy address:
  0x7f37e3cffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f37e3cffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f37e3cffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f37e3cfff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f37e3cfff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f37e3d00000: f1 f1 f1[f1]05 f2 f2 f2 05 f3 f3 f3 00 00 00 00
  0x7f37e3d00080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f37e3d00100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f37e3d00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f37e3d00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f37e3d00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2812642==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux :: TestCases/strcmp.c <<TAIL<<
