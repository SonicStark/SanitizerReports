

>>HEAD>> AddressSanitizer-x86_64-linux :: TestCases/Linux/syscalls.cpp <<HEAD<<

=================================================================
==2792505==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fb5c580001f at pc 0x5602dff8f66f bp 0x7ffccba08d50 sp 0x7ffccba08520
READ of size 56 at 0x7fb5c580001f thread T0
    #0 0x5602dff8f66e in __sanitizer_syscall_pre_impl_recvmsg /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_syscalls.inc:157:3
    #1 0x5602e00046ac in main /home/llvm/compiler-rt/test/asan/TestCases/Linux/syscalls.cpp:17:3
    #2 0x7fb5c7b8a082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x5602dfed52dd in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Linux/Output/syscalls.cpp.tmp+0x1e2dd)

Address 0x7fb5c580001f is located in stack of thread T0 at offset 31 in frame
    #0 0x5602e000458f in main /home/llvm/compiler-rt/test/asan/TestCases/Linux/syscalls.cpp:15

  This frame has 1 object(s):
    [32, 1032) 'buf' (line 16) <== Memory access at offset 31 partially underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_syscalls.inc:157:3 in __sanitizer_syscall_pre_impl_recvmsg
Shadow bytes around the buggy address:
  0x7fb5c57ffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fb5c57ffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fb5c57ffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fb5c57fff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fb5c57fff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7fb5c5800000: f1 f1 f1[f1]00 00 00 00 00 00 00 00 00 00 00 00
  0x7fb5c5800080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fb5c5800100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fb5c5800180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fb5c5800200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7fb5c5800280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2792505==ABORTING
=================================================================
==2796738==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7f46afd0001f at pc 0x55f40342f66f bp 0x7ffec21aac70 sp 0x7ffec21aa440
READ of size 56 at 0x7f46afd0001f thread T0
    #0 0x55f40342f66e in __sanitizer_syscall_pre_impl_recvmsg /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_syscalls.inc:157:3
    #1 0x55f4034a4659 in main /home/llvm/compiler-rt/test/asan/TestCases/Linux/syscalls.cpp:17:3
    #2 0x7f46b207c082 in __libc_start_main /build/glibc-SzIz7B/glibc-2.31/csu/../csu/libc-start.c:308:16
    #3 0x55f4033752dd in _start (/home/llvm/mybuild/projects/compiler-rt/test/asan/X86_64LinuxConfig/TestCases/Linux/Output/syscalls.cpp.tmp+0x1e2dd)

Address 0x7f46afd0001f is located in stack of thread T0 at offset 31 in frame
    #0 0x55f4034a458f in main /home/llvm/compiler-rt/test/asan/TestCases/Linux/syscalls.cpp:15

  This frame has 1 object(s):
    [32, 1032) 'buf' (line 16) <== Memory access at offset 31 partially underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow /home/llvm/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_syscalls.inc:157:3 in __sanitizer_syscall_pre_impl_recvmsg
Shadow bytes around the buggy address:
  0x7f46afcffd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f46afcffe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f46afcffe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f46afcfff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f46afcfff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f46afd00000: f1 f1 f1[f1]00 00 00 00 00 00 00 00 00 00 00 00
  0x7f46afd00080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f46afd00100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f46afd00180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f46afd00200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7f46afd00280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==2796738==ABORTING



>>TAIL>> AddressSanitizer-x86_64-linux :: TestCases/Linux/syscalls.cpp <<TAIL<<
